version: '3.5'

volumes:
  dbdata:
    driver: local

services:
#  frontend:
#    container_name: ${PROJECT_NAME}_frontend
#    build: ./
#    volumes:
#      - './frontend:/usr/src/app'
#    ports:
#      - '${FRONTEND_PORT}:3000'
#    command: >
#      bash -c "npm install && npm run start -- --host=0.0.0.0 --port=3000"

  backend:
    image: nginx:alpine
    container_name: ${PROJECT_NAME}_backend
    hostname: ${NGINX_HOST}
    volumes:
      - "./etc/ssl:/etc/ssl:delegated"
      - "./backend:/var/www/html:delegated"
      - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template:delegated"
      - "./etc/nginx/nginx.conf:/etc/nginx/nginx.conf.default:delegated"
    env_file:
      - ".env"
    ports:
      - "${BACKEND_PORT}:8000"
    environment:
      - NGINX_HOST=${NGINX_HOST}
    command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: always
    links:
      - mysqldb:mysqldb
    depends_on:
      - php
      - mysqldb
      - redis

  php:
    image: studiosidekicks/php-with-composer
    container_name: ${PROJECT_NAME}_php
    restart: always
    volumes:
      - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini:delegated"
      - "./backend:/var/www/html:delegated"
    links:
      - mysqldb:mysqldb

  redis:
    image: redis
    container_name: ${PROJECT_NAME}_redis
    ports:
      - "${REDIS_PORT}:6379"

  mysqldb:
    image: mariadb:10.3
    container_name: ${MYSQL_HOST}
    restart: always
    volumes:
      - ./etc/mysql/my.cnf:/etc/my.cnf
      - "dbdata:/var/lib/mysql:delegated"
    env_file:
      - ".env"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.1
    container_name: ${PROJECT_NAME}_elasticsearch
    environment:
      - cluster.name=${PROJECT_NAME}_cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "${ELASTICSEARCH_PORT}:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    container_name: ${PROJECT_NAME}_kibana
    ports:
      - "${KIBANA_PORT}:5601"